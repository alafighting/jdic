

/** 
 *  WinSystemTrayService interface is the SystemTray implementation.
 *
 * Copyright 2003 Sun Microsystems, Inc. All rights reserved.
 * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 *
 */
package org.jdesktop.jdic.tray.internal.impl;

import org.jdesktop.jdic.tray.internal.SystemTrayService;
import org.jdesktop.jdic.tray.internal.TrayIconService;
import org.jdesktop.jdic.tray.SystemTray;
import org.jdesktop.jdic.tray.TrayIcon;
import java.awt.Toolkit;
import sun.awt.EmbeddedFrame;

public class WinSystemTrayService implements SystemTrayService {

    public WinSystemTrayService() {
    }
     
    public void addNotify() {
    }
    public void addTrayIcon(TrayIcon ti, TrayIconService tis,  int trayIndex) {
     WinTrayIconService trayIcon = (WinTrayIconService)  tis;
     trayIcon.addNotify();
    }
    public void removeTrayIcon(TrayIcon ti, TrayIconService tis,  int trayIndex) {
     WinTrayIconService trayIcon = (WinTrayIconService)  tis;
     trayIcon.remove();
    }
   
    static Thread display_thread;
   
    static native void eventLoop();
    
    static {
        //
        // Very important, we need to force AWT to get loaded before the
        // native library libtray.so is loaded. Otherwise AWT will fail.
       Toolkit t = Toolkit.getDefaultToolkit();
       t.sync();

        System.loadLibrary("tray");
        
        display_thread = new Thread(new Runnable() {
                public void run() {
                eventLoop(); 
                }
                });

        display_thread.start();

    }

}
